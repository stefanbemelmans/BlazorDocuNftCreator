<div id="CreateNewNftFormContainer" class="container-fluid justify-content-around row align-items-center pt-3">

    <label for="NewNftTemplateName">NFT Template Name: </label>
    <Input id="NewNftTemplateName" @bind="@NewNftTemplateName" />

    <label for="NewNftTemplateSymbol">NFT Template Symbol: </label>
    <Input id="NewNftTemplateSymbol" @bind="@NewNftTemplateSymbol" />

    <label for="NewNftTemplateMintLimit">NFT Template Mint Limit: </label>
    <Input id="NewNftTemplateMintLimit" @bind="@NewNftTemplateMintLimit" />

    <label for="NewNftTemplateAttachedTokens">NFT Template Attached Token Amount: </label>
    <Input id="NewNftTemplateAttachedTokens" @bind="@NewNftTemplateAttachedTokens" />

    @*<button type="button" class="btn btn-primary" @onclick="@AddNewNft">
        Create New NFT
    </button>*@

</div>

@code {

NftTemplate newNftTemplate = new NftTemplate();
string NewNftTemplateName { get; set; }

string NewNftTemplateSymbol { get; set; }

int NewNftTemplateMintLimit { get; set; }

int NewNftTemplateAttachedTokens { get; set; }


//public async Task AddNewNft()
//{

//    var url = RopstenWeb3.RinkebyEndpoint;
//    var NftCreatorAddress = NftCreator.NftCreatorRinkebyAddress;

//    var privateKey = RopstenWeb3.TestRopstenPrivateKey;
//    var account = new Account(privateKey);
//    var web3 = new Web3(account, url);

//    var testFromAddress = RopstenWeb3.TestRopstenAccountAddress;

//    Contract NftCreatorContract = web3.Eth.GetContract(NftCreator.Abi, NftCreatorAddress);

//    var AddNewNftFunction = NftCreatorContract.GetFunction("NFTTemplates");

//    var AddNewTemplateHandler = web3.Eth.GetContractTransactionHandler<AddNewNftTemplateFunction>();

//    var NewTemplateFunctionMessage = new AddNewNftTemplateFunction
//    {  

//        NewNftTemplateName = NewNftTemplateName,
//        NewNftTemplateSymbol = NewNftTemplateSymbol,
//        NewNftTemplateMintLimit = NewNftTemplateMintLimit,
//        NewNftTemplateAttachedTokens = NewNftTemplateAttachedTokens

//    };


//    NewTemplateFunctionMessage.Gas = new HexBigInteger(900000);

//    var transactionReceipt = await AddNewTemplateHandler.SendRequestAndWaitForReceiptAsync(NftCreatorAddress, NewTemplateFunctionMessage);

//    Console.WriteLine($"{transactionReceipt.TransactionHash}");

//   }
    }